CC=g++
CFLAGS=-g -Wall

build: objget   objput  objlist objsetacl objgetacl objtestacl

objget :  objget.o  functionCall.o
	$(CC) $(CFLAGS) -o objget    objget.cpp functionCall.cpp

	

objput	: help.o functionCall.o
	$(CC) $(CFLAGS) -o objput     help.cpp functionCall.cpp

	

objlist : objlist.o functionCall.o
	$(CC) $(CFLAGS)  -o objlist    objlist.cpp functionCall.cpp

	
objsetacl : objsetacl.o functionCall.o
	$(CC) $(CFLAGS)  -o objsetacl    objsetacl.cpp functionCall.cpp



objgetacl : objgetacl.o functionCall.o
	$(CC) $(CFLAGS)  -o objgetacl   objgetacl.cpp functionCall.cpp



objtestacl : objtestacl.o functionCall.o
	$(CC) $(CFLAGS)  -o objtestacl  objtestacl.cpp functionCall.cpp



	
ARG=userfile.txt
fileds='s d v'
exec:	build
	#bash  my_script
	#useradd god
	
	chown god ./objput
	chmod u+s  ./objput
	chown god ./objget
	chmod u+s  ./objget
	chown god ./objlist
	chmod u+s  ./objlist
	chown god ./objgetacl
	chmod u+s  ./objgetacl
	chown god ./objsetacl
	chmod u+s  ./objsetacl
	chown god ./objtestacl
	chmod u+s  ./objtestacl	
	#mkdir filesystem
	#chown god filesystem
	#chmod 700 filesystem	



test: 	build		
	su u1 -c "./objput  doc < haha.txt"
	su u1 -c "./objget  doc"
	su u1 -c "./objlist"
	su u1 -c "./objgetacl doc"
	su u1 -c "./objsetacl  doc < newacl"
	su u1 -c "./objtestacl  -a r doc"
	su u1 -c "./objtestacl  -a x doc"
	su u1 -c "./objput  doc < haha.txt"
	su u2 -c "./objput  doc < haha2.txt"
	su u1 -c "./objget  u2+doc"
clean:
	rm *.o   objtestacl objgetacl objsetacl objlist objput objget
	
	
